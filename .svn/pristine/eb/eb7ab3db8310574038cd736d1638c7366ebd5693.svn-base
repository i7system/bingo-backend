
package br.com.bingo.controllers;

import java.sql.Date;
import java.util.HashMap;
import java.util.List;
import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.http.HttpHeaders;
import org.springframework.web.bind.annotation.CrossOrigin;
import org.springframework.web.bind.annotation.DeleteMapping;
import org.springframework.web.bind.annotation.GetMapping;
import org.springframework.web.bind.annotation.PathVariable;
import org.springframework.web.bind.annotation.PostMapping;
import org.springframework.web.bind.annotation.PutMapping;
import org.springframework.web.bind.annotation.RequestBody;
import org.springframework.web.bind.annotation.RequestHeader;
import org.springframework.web.bind.annotation.RequestMapping;
import org.springframework.web.bind.annotation.ResponseBody;
import org.springframework.web.bind.annotation.RestController;

import io.swagger.annotations.Api;
import io.swagger.annotations.ApiOperation;
import br.com.bingo.models.BingoClientes;
import br.com.bingo.models.SecPerfis;
import br.com.bingo.models.SecUsuarios;
import br.com.bingo.repository.bingo_clientesRepository;
import br.com.bingo.UsuariosLogados;

@RestController
@RequestMapping(value="/bingo")
@Api("bingo_clientesController")
@CrossOrigin(origins="*")

public class bingo_clientesController {

	@Autowired
	bingo_clientesRepository bingo_clientesRepository;
	
	@GetMapping("/BingoClientes")
	@ApiOperation(value="lista todos os BingoCLientes em ordem crescente")
	public List<SecPerfis> listarbingo_clientes(){
			
		List listaclientes = null;
		try {
			listaclientes =(List<BingoClientes>) bingo_clientesRepository.findAll();		
		}catch(Exception e) {
			System.out.println("Erro : " + e);
		}
		
		return listaclientes;	
	}
	
	@PostMapping("/BuscarCliente/IDCLIENTE")
	@ApiOperation(value="buscar um cliente")
	public HashMap<String, Object> BuscarCliente(@RequestBody HashMap<String,Object> JsonIdcliente){
			
		List<Object[]> cliente = null;
		HashMap<String, Object> objeto = new HashMap<String , Object>();
		int IDCLIENTE = (int)JsonIdcliente.get("IDCLIENTE");
		try {
			cliente = bingo_clientesRepository.BuscarCliente(IDCLIENTE);
			

			
			for(Object[] obj: cliente ) {

				int idcliente = (int)obj[0];				
				String nomecliente = (String)obj[1];
				int ddd = (int)obj[2];	
				String telefone = (String)obj[3];	
				int iduf = (int)obj[4];
				String sigla = (String)obj[5];
				int idcidade = (int)obj[6];
				String nomecidade= (String)obj[7];	
				String endereco = (String)obj[8];	
				int idusuario = (int)obj[9];	
				String nomeusuario = (String)obj[10];	
				
				
				objeto.put("IDCLIENTE",idcliente);
				objeto.put("NOMECLIENTE",nomecliente);
				objeto.put("DDD", ddd);
				objeto.put("TELEFONE",telefone);
				objeto.put("IDUF", iduf);
				objeto.put("SIGLA", sigla);
				objeto.put("IDCIDADE", idcidade);
				objeto.put("NOMECIDADE", nomecidade);
				objeto.put("ENDERECO", endereco);
				objeto.put("IDUSUARIO", idusuario);
				objeto.put("NOMEUSUARIO", nomeusuario);

				
			}
			
			
			
			
			
			
		}catch(Exception e) {
			System.out.println("Erro : " + e);
		}
		
		return objeto;	
	}

	
	@PostMapping("/SalvarCliente")
	@ApiOperation(value="salvar SecPerfis")
	public HashMap<String, Object> EditarSecPerfis(@RequestBody BingoClientes BingoClientes, @RequestHeader HttpHeaders header) {	
		
		HashMap<String, Object> retorno = new HashMap<String,Object>();
		
		String validacao = "S";
		
		SecUsuarios usuario = UsuariosLogados.BuscarUsuario(header);
		
	
		String foto = "https://cdn.pixabay.com/photo/2015/03/04/22/35/head-659652_960_720.png";
		
		try {
			
			if(BingoClientes.getNOMECLIENTE().length() == 0) {
				
				validacao = "N";
			}
			
			if(BingoClientes.getDDD() == 0) {
				
				validacao = "N";
			}
			
			if(BingoClientes.getTELEFONE().length() == 0) {
				
				validacao = "N";
			}
			
			
			if(BingoClientes.getIDUF() == 0) {
				
				validacao = "N";
			}
			
			if(BingoClientes.getIDCIDADE() == 0) {
				
				validacao = "N";
			}
			
			if(BingoClientes.getENDERECO().length()== 0) {
				
				validacao = "N";
			}

			if(BingoClientes.getIDUSUARIO() == 0) {
				
				validacao = "N";
			}


			
		
			//SE NAO TIVER IDCLIENTE, CRIE UM NOVO CLIENTE
			
			if(BingoClientes.getIDCLIENTE() == 0) {
				
				BingoClientes cliente = new BingoClientes();
				
				if(validacao == "S") {
					
					cliente.setDDD(BingoClientes.getDDD());
					cliente.setENDERECO(BingoClientes.getENDERECO());
					cliente.setIDCIDADE(BingoClientes.getIDCIDADE());
					cliente.setIDUF(BingoClientes.getIDUF());
					cliente.setIDUSUARIO(BingoClientes.getIDUSUARIO());
					cliente.setNOMECLIENTE(BingoClientes.getNOMECLIENTE());
					cliente.setSTATUS(1);
					cliente.setTELEFONE(BingoClientes.getTELEFONE());
					bingo_clientesRepository.save(cliente);
				
				
				
				
				retorno.put("validacao", "S");
				retorno.put("mensagem", "novo cliente criado com sucesso !");
				retorno.put("idcliente", cliente.getIDCLIENTE());
				}

				
			}else {
				//SE TIVER 	IDCLIENTE, PEGUE O CLIENTE POR IDCLIENTE E O ATUALIZE
				BingoClientes cliente = bingo_clientesRepository.findByIDCLIENTE(BingoClientes.getIDCLIENTE());
				
				if(validacao == "S") {
					
					cliente.setDDD(BingoClientes.getDDD());
					cliente.setENDERECO(BingoClientes.getENDERECO());
					cliente.setIDCIDADE(BingoClientes.getIDCIDADE());
					cliente.setIDUF(BingoClientes.getIDUF());
					cliente.setIDUSUARIO(BingoClientes.getIDUSUARIO());
					cliente.setNOMECLIENTE(BingoClientes.getNOMECLIENTE());
					cliente.setSTATUS(1);
					cliente.setTELEFONE(BingoClientes.getTELEFONE());
					bingo_clientesRepository.save(cliente);
					
					retorno.put("validacao", "S");
					retorno.put("idcliente", cliente.getIDCLIENTE());
					retorno.put("mensagem", "seu cliente foi atualizado com sucesso !");
					}

			}

		}catch(Exception e) {
				System.out.println("Erro : "+e.getMessage());
		}
		
		
			
		
		return retorno;
	}

	

}
